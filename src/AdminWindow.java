//Tanya Huisman
//11/15/16

import java.security.AccessControlException;
import java.sql.SQLException;
import java.text.DecimalFormat;
import java.time.LocalDate;
import java.time.format.DateTimeFormatter;
import java.util.GregorianCalendar;
import javax.swing.JOptionPane;
import javax.swing.JTextField;
import javax.swing.text.MaskFormatter;



public class AdminWindow extends javax.swing.JFrame {
String username;
String password;
CAMISQLDao camiDAO;
DateTimeFormatter df = DateTimeFormatter.ofPattern("MMM dd, yyyy");
DecimalFormat dcf = new DecimalFormat("#.00");

    /**
     * Creates new form AdminWindow
     */
    public AdminWindow() {
        initComponents();
        
        
        LoginDialog login = new LoginDialog();
	username = login.getUserName();
	password = login.getPassword();
	boolean dbLoginFailed = true;
	while (dbLoginFailed){
            try {
                //make sure the login and password work for the database
                camiDAO = new CAMISQLDao(username, password);
              
		dbLoginFailed = false;
		} catch (SQLException e1) {
		dbLoginFailed = true;
                //if login and password are wrong show a message and allow them to try again
		JOptionPane.showMessageDialog(null, "Invalid username and/or password",
							"Login Error",
							JOptionPane.ERROR_MESSAGE);
		login = new LoginDialog();
		username = login.getUserName();
		password = login.getPassword();
		}
    }
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        btnGrp = new javax.swing.ButtonGroup();
        btnGrp.add(rdbHourly);
        btnGrp.add(rdbComm);
        btnGrp.add(rdbSalary);
        jPanel1 = new javax.swing.JPanel();
        jLabel2 = new javax.swing.JLabel();
        jLabel3 = new javax.swing.JLabel();
        jLabel4 = new javax.swing.JLabel();
        jLabel5 = new javax.swing.JLabel();
        jLabel6 = new javax.swing.JLabel();
        jLabel7 = new javax.swing.JLabel();
        jLabel8 = new javax.swing.JLabel();
        jLabel9 = new javax.swing.JLabel();
        pnlPayRate = new javax.swing.JPanel();
        rdbHourly = new javax.swing.JRadioButton();
        rdbComm = new javax.swing.JRadioButton();
        rdbSalary = new javax.swing.JRadioButton();
        jLabel10 = new javax.swing.JLabel();
        jLabel11 = new javax.swing.JLabel();
        txtPayRate = new javax.swing.JFormattedTextField(dcf);
        lblPayType = new javax.swing.JLabel();
        jLabel12 = new javax.swing.JLabel();
        jdcHireDate = new com.toedter.calendar.JDateChooser();
        cmbEmpType = new javax.swing.JComboBox<>();
        txtEmpPhone = new javax.swing.JFormattedTextField(createFormatter("(###)###-####"));
        txtEmpState = new javax.swing.JFormattedTextField(createFormatter("UU"));
        txtEmpCity = new javax.swing.JTextField();
        txtEmpApt = new javax.swing.JTextField();
        txtEmpAddress = new javax.swing.JTextField();
        txtEmpFName = new javax.swing.JTextField();
        txtEmpLName = new javax.swing.JTextField();
        jLabel13 = new javax.swing.JLabel();
        txtEmpZip = new javax.swing.JTextField();
        btnSearchEmp = new javax.swing.JButton();
        btnNewEmp = new javax.swing.JButton();
        btnUpdateEmp = new javax.swing.JButton();
        btnDeleteEmp = new javax.swing.JButton();
        jLabel1 = new javax.swing.JLabel();
        lblMessage = new javax.swing.JLabel();
        lblEmpID = new javax.swing.JTextField();

        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);
        addWindowListener(new java.awt.event.WindowAdapter() {
            public void windowOpened(java.awt.event.WindowEvent evt) {
                formWindowOpened(evt);
            }
        });

        jLabel2.setText("Employee Last Name:");

        jLabel3.setText("Employee First Name:");

        jLabel4.setText("Employee Address:");

        jLabel5.setText("Employee Apartment #:");

        jLabel6.setText("Employee City:");

        jLabel7.setText("Employee State: ");

        jLabel8.setText("Employee Phone #: ");

        jLabel9.setText("Employee Type:");

        pnlPayRate.setBorder(javax.swing.BorderFactory.createTitledBorder(""));

        btnGrp.add(rdbHourly);
        rdbHourly.setText("Hourly");
        rdbHourly.addItemListener(new java.awt.event.ItemListener() {
            public void itemStateChanged(java.awt.event.ItemEvent evt) {
                rdbHourlyItemStateChanged(evt);
            }
        });

        btnGrp.add(rdbComm);
        rdbComm.setText("Commission");
        rdbComm.addItemListener(new java.awt.event.ItemListener() {
            public void itemStateChanged(java.awt.event.ItemEvent evt) {
                rdbCommItemStateChanged(evt);
            }
        });

        btnGrp.add(rdbSalary);
        rdbSalary.setText("Salary");
        rdbSalary.addItemListener(new java.awt.event.ItemListener() {
            public void itemStateChanged(java.awt.event.ItemEvent evt) {
                rdbSalaryItemStateChanged(evt);
            }
        });

        jLabel10.setText("Pay Type:");

        jLabel11.setText("Amount:");

        javax.swing.GroupLayout pnlPayRateLayout = new javax.swing.GroupLayout(pnlPayRate);
        pnlPayRate.setLayout(pnlPayRateLayout);
        pnlPayRateLayout.setHorizontalGroup(
            pnlPayRateLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(pnlPayRateLayout.createSequentialGroup()
                .addGap(37, 37, 37)
                .addGroup(pnlPayRateLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(rdbSalary)
                    .addGroup(pnlPayRateLayout.createSequentialGroup()
                        .addGroup(pnlPayRateLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(rdbComm)
                            .addComponent(rdbHourly))
                        .addGroup(pnlPayRateLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(pnlPayRateLayout.createSequentialGroup()
                                .addGap(108, 108, 108)
                                .addComponent(txtPayRate, javax.swing.GroupLayout.PREFERRED_SIZE, 141, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addGroup(pnlPayRateLayout.createSequentialGroup()
                                .addGap(110, 110, 110)
                                .addComponent(lblPayType, javax.swing.GroupLayout.PREFERRED_SIZE, 141, javax.swing.GroupLayout.PREFERRED_SIZE)))))
                .addContainerGap(27, Short.MAX_VALUE))
            .addGroup(pnlPayRateLayout.createSequentialGroup()
                .addGap(25, 25, 25)
                .addComponent(jLabel10)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 95, Short.MAX_VALUE)
                .addComponent(jLabel11)
                .addGap(186, 186, 186))
        );
        pnlPayRateLayout.setVerticalGroup(
            pnlPayRateLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(pnlPayRateLayout.createSequentialGroup()
                .addContainerGap(60, Short.MAX_VALUE)
                .addGroup(pnlPayRateLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addGroup(pnlPayRateLayout.createSequentialGroup()
                        .addGroup(pnlPayRateLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel10)
                            .addComponent(jLabel11))
                        .addGap(31, 31, 31)
                        .addComponent(rdbHourly))
                    .addComponent(lblPayType, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(pnlPayRateLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(rdbComm)
                    .addComponent(txtPayRate, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(rdbSalary)
                .addGap(59, 59, 59))
        );

        jLabel12.setText("Hire Date:");

        jdcHireDate.setDateFormatString("MMM dd, yyyy");

        cmbEmpType.addItemListener(new java.awt.event.ItemListener() {
            public void itemStateChanged(java.awt.event.ItemEvent evt) {
                cmbEmpTypeItemStateChanged(evt);
            }
        });

        txtEmpState.setNextFocusableComponent(txtEmpZip);

        txtEmpCity.setNextFocusableComponent(txtEmpState);

        txtEmpApt.setNextFocusableComponent(txtEmpCity);

        txtEmpAddress.setNextFocusableComponent(txtEmpApt);

        txtEmpFName.setNextFocusableComponent(txtEmpAddress);

        txtEmpLName.setNextFocusableComponent(txtEmpFName);

        jLabel13.setText("Employee Zip:");

        txtEmpZip.setNextFocusableComponent(txtEmpPhone);

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createSequentialGroup()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGap(21, 21, 21)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(jPanel1Layout.createSequentialGroup()
                                .addComponent(jLabel2)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                .addComponent(txtEmpLName, javax.swing.GroupLayout.PREFERRED_SIZE, 99, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addGroup(jPanel1Layout.createSequentialGroup()
                                .addComponent(jLabel3)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                .addComponent(txtEmpFName, javax.swing.GroupLayout.PREFERRED_SIZE, 101, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addGroup(jPanel1Layout.createSequentialGroup()
                                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(jLabel7)
                                    .addComponent(jLabel13))
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(txtEmpZip, javax.swing.GroupLayout.PREFERRED_SIZE, 101, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(txtEmpState, javax.swing.GroupLayout.PREFERRED_SIZE, 47, javax.swing.GroupLayout.PREFERRED_SIZE)))
                            .addGroup(jPanel1Layout.createSequentialGroup()
                                .addComponent(jLabel6)
                                .addGap(18, 18, 18)
                                .addComponent(txtEmpCity, javax.swing.GroupLayout.PREFERRED_SIZE, 107, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addGroup(jPanel1Layout.createSequentialGroup()
                                .addComponent(jLabel4)
                                .addGap(18, 18, 18)
                                .addComponent(txtEmpAddress, javax.swing.GroupLayout.PREFERRED_SIZE, 102, javax.swing.GroupLayout.PREFERRED_SIZE))))
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addContainerGap()
                        .addComponent(jLabel5)
                        .addGap(18, 18, 18)
                        .addComponent(txtEmpApt, javax.swing.GroupLayout.PREFERRED_SIZE, 90, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addContainerGap()
                        .addComponent(jLabel8)
                        .addGap(18, 18, 18)
                        .addComponent(txtEmpPhone, javax.swing.GroupLayout.PREFERRED_SIZE, 116, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(pnlPayRate, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel12)
                            .addComponent(jLabel9))
                        .addGap(60, 60, 60)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(cmbEmpType, javax.swing.GroupLayout.PREFERRED_SIZE, 134, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jdcHireDate, javax.swing.GroupLayout.PREFERRED_SIZE, 147, javax.swing.GroupLayout.PREFERRED_SIZE))))
                .addContainerGap())
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel9)
                    .addComponent(cmbEmpType, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel2)
                    .addComponent(txtEmpLName, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(1, 1, 1)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addComponent(jLabel12)
                        .addGap(18, 18, 18)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel3)
                            .addComponent(txtEmpFName, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(18, 18, 18)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel4)
                            .addComponent(txtEmpAddress, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(pnlPayRate, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addGroup(jPanel1Layout.createSequentialGroup()
                                .addGap(12, 12, 12)
                                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                    .addComponent(jLabel5)
                                    .addComponent(txtEmpApt, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                                .addGap(18, 18, 18)
                                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                    .addComponent(jLabel6)
                                    .addComponent(txtEmpCity, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                                .addGap(18, 18, 18)
                                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                    .addComponent(jLabel7)
                                    .addComponent(txtEmpState, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                                .addGap(18, 18, 18)
                                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                    .addComponent(jLabel13)
                                    .addComponent(txtEmpZip, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                                .addGap(18, 18, 18)
                                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                    .addComponent(jLabel8)
                                    .addComponent(txtEmpPhone, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                                .addGap(0, 59, Short.MAX_VALUE))))
                    .addComponent(jdcHireDate, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(34, 34, 34))
        );

        btnSearchEmp.setText("Search Employee");
        btnSearchEmp.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnSearchEmpActionPerformed(evt);
            }
        });

        btnNewEmp.setText("New Employee");
        btnNewEmp.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnNewEmpActionPerformed(evt);
            }
        });

        btnUpdateEmp.setText("Update Employee");
        btnUpdateEmp.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnUpdateEmpActionPerformed(evt);
            }
        });

        btnDeleteEmp.setText("Delete Employee");
        btnDeleteEmp.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnDeleteEmpActionPerformed(evt);
            }
        });

        jLabel1.setText("Employee ID: ");

        lblEmpID.setFocusCycleRoot(true);
        lblEmpID.setNextFocusableComponent(txtEmpLName);

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                        .addContainerGap()
                        .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(layout.createSequentialGroup()
                                .addGap(112, 112, 112)
                                .addComponent(btnNewEmp)
                                .addGap(101, 101, 101)
                                .addComponent(btnSearchEmp)
                                .addGap(73, 73, 73)
                                .addComponent(btnUpdateEmp)
                                .addGap(93, 93, 93)
                                .addComponent(btnDeleteEmp))
                            .addGroup(layout.createSequentialGroup()
                                .addGap(31, 31, 31)
                                .addComponent(jLabel1)
                                .addGap(29, 29, 29)
                                .addComponent(lblEmpID, javax.swing.GroupLayout.PREFERRED_SIZE, 123, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addGroup(layout.createSequentialGroup()
                                .addGap(232, 232, 232)
                                .addComponent(lblMessage, javax.swing.GroupLayout.PREFERRED_SIZE, 516, javax.swing.GroupLayout.PREFERRED_SIZE)))
                        .addGap(0, 169, Short.MAX_VALUE)))
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(lblMessage, javax.swing.GroupLayout.PREFERRED_SIZE, 19, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(jLabel1)
                    .addComponent(lblEmpID, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(btnSearchEmp)
                    .addComponent(btnUpdateEmp)
                    .addComponent(btnDeleteEmp)
                    .addComponent(btnNewEmp))
                .addGap(50, 50, 50))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void btnNewEmpActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnNewEmpActionPerformed
     //creates a new employee and adds them to the database
        String lname = txtEmpLName.getText();
        String fname = txtEmpFName.getText();
        String address = txtEmpAddress.getText();
        String city = txtEmpCity.getText();
        String state = txtEmpState.getText();
        String zipTxt = txtEmpZip.getText();
        String phone = txtEmpPhone.getText();
        String hourly = null;
        String comm = null;
        String salary = null;
        String payType = null;
        Double hrlyPay = 0.0;
        Double commPercent = 0.0;
        Double salPay = 0.0;
        Double sales = 0.0;
        Double tSales = 0.0;
        Double commission = 0.0;
        String hireDate = ((JTextField)jdcHireDate.getDateEditor().getUiComponent()).getText(); 
        if(lname.equals("")||fname.equals("")||address.equals("")||city.equals("") ||state.equals("") ||zipTxt.equals("") || phone.equals("()-")|| hireDate == null)
        {//check all required fields to make sure required information is added
            lblMessage.setText("Please enter all required information.");
        }
        else
        {
            lblMessage.setText(null);
            int zip = Integer.parseInt(zipTxt);
            String aptnum = txtEmpApt.getText();
            String empType = cmbEmpType.getSelectedItem().toString();
            if(rdbHourly.isSelected())
            {
                
                hourly = txtPayRate.getText();
                hrlyPay = Double.parseDouble(hourly);
                payType = "Hourly";
            }
            if(rdbComm.isSelected())
            {
               
                comm = txtPayRate.getText();
                commPercent = Double.parseDouble(comm);
                payType = "Commission";
                
            }   
            if(rdbSalary.isSelected())
            {
                
                salary = txtPayRate.getText();
                salPay = Double.parseDouble(salary);
                payType = "Salary";
            }
            LocalDate dateH = LocalDate.parse(hireDate, df);
            GregorianCalendar hDate = new GregorianCalendar(dateH.getYear(), dateH.getMonthValue(), dateH.getDayOfMonth());
            
            Employee emp = new Employee(lname, fname, address, aptnum, city, state, zip, phone, payType, hrlyPay, commPercent, salPay, sales, tSales, commission, empType, hDate );
            try
            {
                camiDAO.insertEmployee(emp);
            }catch(AccessControlException ex)
            {//catches an exception if the logged in user does not have the correct priveledges.
                JOptionPane.showMessageDialog(null, "You do not have permission to do that, please close the Admin Window and try again.");
                this.dispose();
            }
            int empID = camiDAO.getLastEmp();
            lblEmpID.setText(Integer.toString(empID));
            lblMessage.setText("Employee added successfully");
            
        }
    }//GEN-LAST:event_btnNewEmpActionPerformed

    private void btnSearchEmpActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnSearchEmpActionPerformed
      //Search for existing employees
        String id = lblEmpID.getText();
      if(id == null)
      {
          lblMessage.setText("Please enter a valid ID number");
      }
      else{
          lblMessage.setText(null);
        int empID = Integer.parseInt(id);
        try
        {
        Employee emp = camiDAO.findEmployee(empID);
        txtEmpLName.setText(emp.getLastName());
        txtEmpFName.setText(emp.getFirstName());
        txtEmpAddress.setText(emp.getAddress());
        txtEmpApt.setText(emp.getApartment());
        txtEmpCity.setText(emp.getCity());
        txtEmpState.setText(emp.getState());
        txtEmpZip.setText(Integer.toString(emp.getZip()));
        txtEmpPhone.setText(emp.getPhone());
        cmbEmpType.setSelectedItem(emp.getEmpType());
        jdcHireDate.setCalendar(emp.getHireDate());
        String payType = emp.getPayType();
        if(payType == "Hourly")
        {
          rdbHourly.setSelected(true);
          txtPayRate.setText(Double.toString(emp.getHrlyPay()));
        }
        if(payType == "Commission")
        {
          rdbComm.setSelected(true);
          txtPayRate.setText(Double.toString(emp.getCommPercent()));
         }
        if(payType == "Salary")
        {
            rdbSalary.setSelected(true);
            txtPayRate.setText(Double.toString(emp.getSalary()));
        }
        }catch(Exception ex){
            lblMessage.setText("Employee not found. Try another ID");
        }
      }
      
      
    }//GEN-LAST:event_btnSearchEmpActionPerformed

    private void btnUpdateEmpActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnUpdateEmpActionPerformed
       //update current employee with new information.
        
        String id = lblEmpID.getText();
        if(id == null)
        {
            
        }
        else
        {
        int empID = Integer.parseInt(id);
        String lname = txtEmpLName.getText();
        String fname = txtEmpFName.getText();
        String address = txtEmpAddress.getText();
        String city = txtEmpCity.getText();
        String state = txtEmpState.getText();
        String zipTxt = txtEmpZip.getText();
        int zip = Integer.parseInt(zipTxt);
        String phone = txtEmpPhone.getText();
        String hourly = null;
        String comm = null;
        String salary = null;
        String payType = null;
        Double hrlyPay = 0.0;
        Double commPercent = 0.0;
        Double salPay = 0.0;
        Double sales = 0.0;
        Double tSales = 0.0;
        Double commission = 0.0;
        if(lname == null||fname == null||address == null||city == null ||state == null ||zipTxt == null || phone == null)
        {
            lblMessage.setText("Please enter all required information.");
        }
        else
        {
            String aptnum = txtEmpApt.getText();
            String empType = cmbEmpType.getSelectedItem().toString();
            String hireDate = ((JTextField)jdcHireDate.getDateEditor().getUiComponent()).getText(); 
            
            if(rdbHourly.isSelected())
            {
                hourly = txtPayRate.getText();
                hrlyPay = Double.parseDouble(hourly);
                payType = "Hourly";
            }
            else if(rdbComm.isSelected())
            {
                comm = txtPayRate.getText();
                commPercent = Double.parseDouble(comm);
                payType = "Commission";
                
            }   
            else if(rdbSalary.isSelected())
            {
                salary = txtPayRate.getText();
                salPay = Double.parseDouble(salary);
                payType = "Salary";
            }
            
            LocalDate dateH = LocalDate.parse(hireDate, df);
            GregorianCalendar hDate = new GregorianCalendar(dateH.getYear(), dateH.getMonthValue(), dateH.getDayOfMonth());
            
            Employee emp = new Employee(empID, lname, fname, address, aptnum, city, state, zip, phone, payType, hrlyPay, commPercent, salPay, sales, tSales, commission, empType, hDate );
            try
            {
                camiDAO.updateEmployee(emp);
            }catch(Exception ex)
            {//catches an exception if the logged in user does not have the correct priveledges.
                JOptionPane.showMessageDialog(null, "You do not have permission to do that, please close the Admin Window and try again.");
                this.dispose();
            }
            lblMessage.setText("Employee updated successfully");
        }
       }
    }//GEN-LAST:event_btnUpdateEmpActionPerformed

    private void btnDeleteEmpActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnDeleteEmpActionPerformed
        //delete an employee from the database
        
        String id = lblEmpID.getText();
        if(id == null)
            lblMessage.setText("Please enter the correct Employee ID to delete");
        else{
            int empID = Integer.parseInt(id);
            try
            {
            camiDAO.deleteEmployee(empID);
            lblMessage.setText("Employee successfully deleted");
            lblEmpID.setText(null);
            txtEmpLName.setText(null);
            txtEmpFName.setText(null);
            txtEmpAddress.setText(null);
            txtEmpApt.setText(null);
            txtEmpCity.setText(null);
            txtEmpState.setText(null);
            txtEmpZip.setText(null);
            txtEmpPhone.setText(null);
            cmbEmpType.setSelectedIndex(0);
            java.util.Date rightnow = new java.util.Date();
            jdcHireDate.setDate(rightnow);
            txtPayRate.setText(null);
            rdbHourly.setSelected(false);
            rdbComm.setSelected(false);
            rdbSalary.setSelected(false);
            }
            catch(AccessControlException ex)
            {
                    lblMessage.setText("You do not have permission to do that. Please try logging in again.");
                    this.dispose();
            }
            
        }
    }//GEN-LAST:event_btnDeleteEmpActionPerformed

    private void formWindowOpened(java.awt.event.WindowEvent evt) {//GEN-FIRST:event_formWindowOpened
        //Fill combo box with employee types to choose from and set date to today
        cmbEmpType.addItem("-------");
        cmbEmpType.addItem("Groomer");
        cmbEmpType.addItem("Administrator");
        cmbEmpType.addItem("Accountant");
        cmbEmpType.addItem("Receptionist");
        cmbEmpType.addItem("Groomer's Assistant");
        cmbEmpType.addItem("Customer Service Rep");
         java.util.Date rightnow = new java.util.Date();
           jdcHireDate.setDate(rightnow);
        
    }//GEN-LAST:event_formWindowOpened

    private void cmbEmpTypeItemStateChanged(java.awt.event.ItemEvent evt) {//GEN-FIRST:event_cmbEmpTypeItemStateChanged
       String empType = cmbEmpType.getSelectedItem().toString();
       if(empType == "Groomer")
       {
           rdbComm.setSelected(true);
           rdbHourly.setEnabled(false);
           rdbSalary.setEnabled(false);
           txtPayRate.setText("0.5");
       }
       else
       {
           rdbHourly.setEnabled(true);
           rdbSalary.setEnabled(true);
       }
    }//GEN-LAST:event_cmbEmpTypeItemStateChanged

    private void rdbHourlyItemStateChanged(java.awt.event.ItemEvent evt) {//GEN-FIRST:event_rdbHourlyItemStateChanged
      if(rdbHourly.isSelected())
        lblPayType.setText("<html>Input how much per hour the employee makes.<br> IE: 10.00</html>");
    }//GEN-LAST:event_rdbHourlyItemStateChanged

    private void rdbCommItemStateChanged(java.awt.event.ItemEvent evt) {//GEN-FIRST:event_rdbCommItemStateChanged
        if(rdbComm.isSelected()) 
        lblPayType.setText("<html>Enter the percentage of commission that the <br>employee earns on each transaction.<br> IE: 0.50 for 50%</html>");
    }//GEN-LAST:event_rdbCommItemStateChanged

    private void rdbSalaryItemStateChanged(java.awt.event.ItemEvent evt) {//GEN-FIRST:event_rdbSalaryItemStateChanged
      if(rdbSalary.isSelected())
        lblPayType.setText("<html>Enter the annual amount for Salary.<br> IE: 45000.00</html>");
    }//GEN-LAST:event_rdbSalaryItemStateChanged
protected MaskFormatter createFormatter(String s) 
    {
        //method to create a mask that allows only the specified format and automatically adjusts input as needed
    MaskFormatter formatter = null;
    try {
        formatter = new MaskFormatter(s);
    } catch (java.text.ParseException exc) {
        System.err.println("formatter is bad: " + exc.getMessage());
        System.exit(-1);
    }
    return formatter;
    }
    
   

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btnDeleteEmp;
    private javax.swing.ButtonGroup btnGrp;
    private javax.swing.JButton btnNewEmp;
    private javax.swing.JButton btnSearchEmp;
    private javax.swing.JButton btnUpdateEmp;
    private javax.swing.JComboBox<String> cmbEmpType;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel10;
    private javax.swing.JLabel jLabel11;
    private javax.swing.JLabel jLabel12;
    private javax.swing.JLabel jLabel13;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JLabel jLabel8;
    private javax.swing.JLabel jLabel9;
    private javax.swing.JPanel jPanel1;
    private com.toedter.calendar.JDateChooser jdcHireDate;
    private javax.swing.JTextField lblEmpID;
    private javax.swing.JLabel lblMessage;
    private javax.swing.JLabel lblPayType;
    private javax.swing.JPanel pnlPayRate;
    private javax.swing.JRadioButton rdbComm;
    private javax.swing.JRadioButton rdbHourly;
    private javax.swing.JRadioButton rdbSalary;
    private javax.swing.JTextField txtEmpAddress;
    private javax.swing.JTextField txtEmpApt;
    private javax.swing.JTextField txtEmpCity;
    private javax.swing.JTextField txtEmpFName;
    private javax.swing.JTextField txtEmpLName;
    private javax.swing.JFormattedTextField txtEmpPhone;
    private javax.swing.JFormattedTextField txtEmpState;
    private javax.swing.JTextField txtEmpZip;
    private javax.swing.JFormattedTextField txtPayRate;
    // End of variables declaration//GEN-END:variables
}
